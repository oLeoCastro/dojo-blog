{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["D:/Curso-React/dojo-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACMC,GAAG,IAAI;AACX,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AAAE;AACb,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAND,EAOCJ,IAPD,CAOMR,IAAI,IAAI;AACZG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAXD,EAYCQ,KAZD,CAYOC,GAAG,IAAI;AACZ;AACAX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACD,OAhBD;AAiBD,KAlBS,EAkBP,IAlBO,CAAV;AAmBD,GApBQ,EAoBN,CAAChB,GAAD,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA5BD;;GAAMN,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch(url)\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        // auto catches network / connection error\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      })\r\n    }, 1000);\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}